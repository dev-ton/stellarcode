@tailwind base;
@tailwind components;


:root {
  --startColor: hsl(0, 100%, 75%);
  --stopColor: hsl(0, 100%, 75%);
}

body {
  background: url("../images/landscape.svg") no-repeat bottom center, linear-gradient(180deg, rgba(19,19,19,1) 0%, rgba(75,63,114,1) 30%, rgba(31,32,65,1) 66%);
  background-size: contain;
  
  @apply .font-sans .antialiased;
}


p { 
  @apply .py-2;
}

.container {
  @apply .max-w-screen-xl .mx-auto .px-4;
}

/* pt-72 did not work for some reason, so I made this. Its making offset on the Hero component,
 so its not covered by the header*/
.pt15rem {
  padding-top: 15rem;
}

nav > div.hidden.sm\:block > ul > a.active {
  @apply border-blue-600 text-stellar;
}

.bgBluro {
  backdrop-filter: blur(20px);
}

/* if backdrop support: very transparent and blurred */
@supports ((-webkit-backdrop-filter: blur(2rem)) or (backdrop-filter: blur(2rem))) {
  .bgBlur {
    -webkit-backdrop-filter: blur(2rem);
    backdrop-filter: blur(2rem);
  }
}


/* animation of the stars in the logo */
#logo {
  transform: translate(10%, 10%);
}

@keyframes starShine {
  0%, 90%, 100% {transform: scale(0.9)}
  95% {transform: scale(1.1)}
}

#Star1, #Star2, #Star3  {
  animation-name: starShine;
  animation-duration: 5s;
  animation-direction: normal;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
  transform: scale(0.9);
  transform-origin: center;
}

#Star2 {
  animation-delay: 250ms;
}

#Star3 {
  animation-delay: 500ms;
}

/* Bounce animation 'animation-bounce' did not work, doing it manually */

.square50 {
  width: 50px;
  height: 50px;
}

.bouncyBounce {
  animation: bounce 1s infinite;
}

@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animationTimingFunction: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: translateY(0);
    animationTimingFunction: cubic-bezier(0, 0, 0.2, 1);
  }
}

/* card */

.card:hover {
  --tw-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

/*  stellar button */
.stellarButton {
display: flex;
flex-direction: row;
justify-content: center;
align-items: center;
border-radius: 4px;
}

.stellarButton:hover {
  transform: scale(1.05);
  transition: all ease-in-out .75;
  }


/* SVG background */
.svgBlob {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg viewBox='0 0 1072 941' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M1064 423C1122.93 692.5 832.083 941 546 941C176.5 941 0.5 667.583 0.5 381.5C0.5 95.4165 217.5 -115 663 70.5C1007.5 213.945 1030 267.5 1064 423Z' fill='%231F2041'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
}

.svgAnimBlob {
  width: 90vmin;
  height: 90vmin;
}

/* footer */



/* contact form field bg */
.formBg {
background: linear-gradient(360deg, #C4C4C4 -161.69%, rgba(196, 196, 196, 0.5) -161.66%, rgba(196, 196, 196, 0.296905) 99.97%, rgba(196, 196, 196, 0) 100%);
background-blend-mode: overlay;
}
.formBg:focus {
  box-shadow: 0 4px 8px 0 rgba(178, 120, 0, 0.2), 0 6px 20px 0 rgba(178, 120, 0, 0.19);
}


/* contact form*/



input[type="text"], input[type="email"], textarea  {
  font: 16px/26px "Lato", Arial, sans-serif; 
  color: rgb(156, 156, 156); 
  width: 100%; 
  box-sizing: border-box; 
  letter-spacing: 1px;
  resize: none;}

input[type="text"]:focus, input[type="email"]:focus, textarea:focus  {
  outline: none;}

.effect-16 {
  border: 0;
  padding: 4px 0;
  background-color: transparent; }

.effect-16 ~ .focus-border {
  position: absolute;
  bottom: 0; 
  left: 0; 
  width: 0; 
  height: 2px; 
  background-color: #4caf50; 
  transition: 0.4s;}

  .effect-16 ~ .default-border {
    position: absolute;
    bottom: 0; 
    left: 0; 
    width: 100%; 
    height: 1px;
    z-index: -2; 
    background-color: #7e7e7e
  }

.effect-16:focus ~ .focus-border,
.has-content.effect-16 ~ .focus-border,
input:not(:placeholder-shown) ~ .focus-border,
textarea:not(:placeholder-shown) ~ .focus-border  {
  width: 100%; 
  transition: 0.4s;}

.effect-16 ~ label {
  position: absolute; 
  left: 0; 
  width: 100%; 
  top: 9px; 
  color: #aaa; 
  transition: 0.3s; 
  z-index: -1; 
  letter-spacing: 0.5px;}

.effect-16:focus ~ label, .has-content.effect-16 ~ label, input:not(:placeholder-shown) ~ label, 
textarea:not(:placeholder-shown) ~ label {
  top: -16px;
  font-size: 12px;
  color: #4caf50;
  transition: 0.3s;}

.form-label-align {
  top: -3px;
}


/* responsive */


@screen md {
  .container {
    @apply .px-6;
  }
}

@screen lg {
  .container {
    @apply .px-8;
  }
}
